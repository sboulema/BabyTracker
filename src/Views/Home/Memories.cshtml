@using BabyTracker.Extensions;

@model BabyTracker.Models.ViewModels.DiaryViewModel

@{
    ViewData["Title"] = "Memories - BabyTracker";
}

<ul class="nav nav-pills mb-3" id="pills-tab">
    <li class="nav-item">
        <button class="nav-link active" id="pills-list-tab" data-bs-toggle="pill" data-bs-target="#pills-list" type="button">
            <i class="fas fa-list"></i> List</button>
    </li>
    <li class="nav-item">
        <button class="nav-link" id="pills-card-tab" data-bs-toggle="pill" data-bs-target="#pills-card" type="button">
            <i class="fas fa-image"></i> Card</button>
    </li>
</ul>
<div class="tab-content fs-@Model.FontSize" id="pills-tabContent">
    <div class="tab-pane fade show active" id="pills-list">
        @foreach (var group in Model.Entries.GroupBy(entry => entry.TimeStamp.ToDateTimeUTC().Year))
        {
            @if (group.Any() == false)
            {
                continue;
            }

            var yearsAgo = DateTime.UtcNow.Year - group.Key;
            <h1 class="bt-purple-title">
                @yearsAgo @(yearsAgo == 1 ? "year" : "years") ago
            </h1>

            @foreach (var entry in group)
            {
                @await Html.PartialAsync("_DiaryEntryList", entry)
            }
        }
    </div>
    <div class="tab-pane fade" id="pills-card">
        @foreach (var group in Model.Entries.GroupBy(entry => entry.TimeStamp.ToDateTimeUTC().Year))
        {
            @if (group.Any() == false)
            {
                continue;
            }

            var yearsAgo = DateTime.UtcNow.Year - group.Key;
            <h1 class="bt-purple-title">
                @yearsAgo @(yearsAgo == 1 ? "year" : "years") ago
            </h1>

            @foreach (var entry in group)
            {
                @await Html.PartialAsync("_DiaryEntryCard", entry)
            }
        }
    </div>
</div>

@section Scripts
{
    <script>
        function saveCard(selector) {
            $(".card-buttons").toggle();

            var scrollTop = document.documentElement.scrollTop;

            window.scrollTo(0, 0);

            html2canvas(document.querySelector("#" + selector)).then(canvas => {
                canvas.toBlob(function (blob) {
                    saveAs(blob, selector + ".png");
                });
            });

            window.scrollTo(0, scrollTop);

            $(".card-buttons").toggle();
        }

        function useFullImageCard(selector) {
            var imageSrc = $(`#${selector} img`)[0].src;
            $(`#${selector} img`)[0].src = imageSrc.endsWith("/thumbnail")? imageSrc.replace("/thumbnail", "") : `${imageSrc}/thumbnail`;
        }
    </script>
}